{"version":3,"file":"static/js/23.1acbe513.chunk.js","mappings":"yOACA,EAAiC,+BAAjC,EAAoF,kCAApF,EAA8H,sBAA9H,EAAgK,0B,SCsEhK,EAjEe,WAAO,IAAD,MACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC5C,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAqB,2BAAuBP,GAElD,GAAwBQ,EAAAA,EAAAA,GAASD,GAAzBE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAYd,OAAIA,GACFC,QAAQC,IAAIF,IACL,iEAIP,4BACE,mBACA,kBAAMG,SAhBgB,SAAAC,GACxBA,EAAEC,iBACwB,KAAtBD,EAAEE,OAAO,GAAGb,OAGhBJ,EAAgB,CAAEkB,MAAOd,GAC1B,EAUG,WACE,kBACEe,KAAK,OACLC,SArBa,SAAAL,GAAC,OAAIV,EAASU,EAAEE,OAAOb,MAAtB,EAsBdA,MAAOA,EACPiB,UAAWC,KAEb,mBAAQH,KAAK,SAASE,UAAWC,EAAjC,wBAIF,mBACA,gBAAKD,UAAWC,EAAhB,SAC6B,KAAtB,OAAJZ,QAAI,IAAJA,GAAA,UAAAA,EAAMa,eAAN,eAAeC,SACd,oEADD,OAGCd,QAHD,IAGCA,GAHD,UAGCA,EAAMa,eAHP,aAGC,EAAeE,KAAI,SAAAC,GAAE,OACnB,UAAC,KAAD,CACEC,GAAID,EAAGE,GAAGC,WAEVR,UAAWC,EACXQ,MAAO,CAAEC,KAAMzB,GAJjB,WAME,gBACE0B,IAAG,yCAAoCN,EAAGO,aAC1CC,MAAM,QACNC,IAAKT,EAAGU,KACRC,QAASC,EAAAA,IAEVZ,EAAGU,OAVCV,EAAGE,GAHS,QAoB9B,C","sources":["webpack://react-homework-template/./src/pages/Movies/movies.module.css?e50d","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchedMovies\":\"movies_searchedMovies__td1ZW\",\"searchedMovieItem\":\"movies_searchedMovieItem__ZBE5J\",\"input\":\"movies_input__ScP6r\",\"searchBtn\":\"movies_searchBtn__Bq+0Q\"};","import { useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport useFetch from '../../Service/useFetch';\nimport handleImgLoadError from '../../helpers/handleImgLoadError';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n  const [value, setValue] = useState(search);\n  const location = useLocation();\n  const FETCH_MOVIES_BY_QUERY = `/search/tv?query=${search}`;\n\n  const { data, error } = useFetch(FETCH_MOVIES_BY_QUERY);\n\n  const handleChange = e => setValue(e.target.value);\n\n  const handleInputSubmit = e => {\n    e.preventDefault();\n    if (e.target[0].value === '') {\n      return;\n    }\n    setSearchParams({ query: value });\n  };\n\n  if (error) {\n    console.log(error);\n    return <h2>Something went wrong ðŸ˜¢ </h2>;\n  }\n\n  return (\n    <div>\n      <br />\n      <form onSubmit={handleInputSubmit}>\n        <input\n          type=\"text\"\n          onChange={handleChange}\n          value={value}\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.searchBtn}>\n          Search\n        </button>\n      </form>\n      <br />\n      <div className={css.searchedMovies}>\n        {data?.results?.length === 0 ? (\n          <p>We don't have such TV shows ðŸ¤¡</p>\n        ) : (\n          data?.results?.map(el => (\n            <Link\n              to={el.id.toString()}\n              key={el.id}\n              className={css.searchedMovieItem}\n              state={{ from: location }}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w500${el.poster_path}`}\n                width=\"200px\"\n                alt={el.name}\n                onError={handleImgLoadError}\n              />\n              {el.name}\n            </Link>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","search","get","useState","value","setValue","location","useLocation","FETCH_MOVIES_BY_QUERY","useFetch","data","error","console","log","onSubmit","e","preventDefault","target","query","type","onChange","className","css","results","length","map","el","to","id","toString","state","from","src","poster_path","width","alt","name","onError","handleImgLoadError"],"sourceRoot":""}