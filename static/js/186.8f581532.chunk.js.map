{"version":3,"file":"static/js/186.8f581532.chunk.js","mappings":"4KAkCA,UA/BgB,WACd,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,EAAyB,cAAUF,EAAV,aAE/B,GAAiCG,EAAAA,EAAAA,GAASD,GAAlCE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAEvB,OAAID,GAAgB,wCAEhBC,GACFC,QAAQC,IAAIF,IACL,iEAIP,wBAC4B,KAArB,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMK,QAAQC,SACb,6FADD,OAGCN,QAHD,IAGCA,OAHD,EAGCA,EAAMK,QAAQE,KAAI,SAAAC,GAAE,OAClB,2BACE,qCACU,0BAAOA,EAAGC,aAEpB,uBAAID,EAAGE,YAJAF,EAAGC,OADM,KAW3B,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport useFetch from '../../Service/useFetch';\n\nconst Reviews = () => {\n  const { moviesID } = useParams();\n  const FETCH_REVIEWS_BY_MOVIE_ID = `/tv/${moviesID}/reviews?`;\n\n  const { data, loading, error } = useFetch(FETCH_REVIEWS_BY_MOVIE_ID);\n\n  if (loading) return <h2> LOADING...</h2>;\n\n  if (error) {\n    console.log(error);\n    return <h2>Something went wrong üò¢ </h2>;\n  }\n\n  return (\n    <ul>\n      {data?.results.length === 0 ? (\n        <p>We don't have any rewievs for this movie üëéüèª</p>\n      ) : (\n        data?.results.map(el => (\n          <li key={el.author}>\n            <b>\n              Author: <span>{el.author}</span>\n            </b>\n            <p>{el.content}</p>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["moviesID","useParams","FETCH_REVIEWS_BY_MOVIE_ID","useFetch","data","loading","error","console","log","results","length","map","el","author","content"],"sourceRoot":""}